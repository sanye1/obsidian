{
	"nodes":[
		{"type":"file","file":"web2.0.md","id":"0a65b62d52e1c9da","x":-800,"y":-200,"width":580,"height":1040},
		{"type":"text","text":"## web3.0学习路线\n### 学习步骤\n#### 1 - 学习区块链技术\n+ 基础知识，包括共识算法、加密技术、分布式账本\n#### 2 - 学习智能合约\n+ 学习智能合约的概念、\n+ 编写和部署智能合约的过程。\n+ 掌握 Solidity 编程语言和其他智能合约平台如 EOS、Tron 等的基础\n#### 3 - 掌握web3.0技术栈\n+ 包括以太坊、IPFS、whisper 等技术。学习如何使用以太坊智能合约编写 dApps\n#### 4 - 学习开发工具\n+ 学习使用 Web3.0 开发工具如 Remix、Truffle、Ganache 等。这些工具可以帮助您更加高效地开发和测试 dApps\n#### 5 - 参与开发社区\n+ 加入以太坊开发者社区、Solidity 开发者社区、IPFS 社区等等\n","id":"6231dd35826769fe","x":-800,"y":-880,"width":580,"height":600},
		{"type":"text","text":"## web3.0特点\n##### 统一的身份认证\n>在理想的Web3.0世界中，身份认证将会由一个统一的平台进行\n##### 数据确认与授权\n>区块链技术的数据确权与授权将改善数据归头部平台私藏的情况,用户可以掌握个人数据的使用权和所有权\n##### 无需信任\n>在Web3.0世界中，基于区块链技术实现的去中心化服务为“无信任”提供了可能。例如·`对一笔发生在区块链上的交易，任何人均可参与对交易信息真实性的确认而不再依赖一个受到“信任”的中心化机构`\n##### 打破垄断\n>中心化的一个弊端就是会形成垄断，在3.0中一条链会形成生态，并且会有跨链的工具，为各个链形成多元生态\n\n``但是从现实来看，web3.0与上述描述还有很大差距``\n","id":"ad9377b23fc1f94d","x":-120,"y":-860,"width":440,"height":560},
		{"type":"text","text":"## web3.0资本推手\n> 1 - 一些专为2.0存在的新兴资本\n> 2 - 已经将触角伸到3.0的传统资本\n#### 投资布局\n>传统资本：(old money) 更偏向于投资以借贷，期权等传统玩法为主的金融类应用\n>新兴资本：(new money偏向社交类，图像类等试验型应用\n>`前者的商业逻辑依然遵循web2.0,而后者遵循web3.0的逻辑，后者在投资数量上来说更多`\n#### 为什么\n1 - 声誉和流量\n2 - ","id":"954f6809b2784faf","x":380,"y":-860,"width":440,"height":560}
	],
	"edges":[]
}